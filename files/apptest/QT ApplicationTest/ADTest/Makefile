#############################################################################
# Makefile for building: ADTest
# Generated by qmake (1.06c-Qtopia) (Qt 3.2.1) on: Fri Mar 16 01:50:05 2012
# Project:  ADTest.pro
# Template: app
# Command: $(QMAKE) -o Makefile ADTest.pro
#############################################################################

####### Compiler, tools and options

CC       = arm-linux-gcc
CXX      = arm-linux-g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -Os  -DQT_NO_QWS_VFB -DQTOPIA_DATA_LINKING -DQCONFIG=\"qconfig-qpe.h\" -DQTOPIA_TARGET=\"ADTest\" -DQTOPIA_TRTARGET=\"ADTest\" -DQT_NO_DEBUG
CXXFLAGS = -pipe -DQWS -fno-exceptions -fno-rtti -Wall -W -Os  -DQT_NO_QWS_VFB -DQTOPIA_DATA_LINKING -DQCONFIG=\"qconfig-qpe.h\" -DQTOPIA_TARGET=\"ADTest\" -DQTOPIA_TRTARGET=\"ADTest\" -DQT_NO_DEBUG
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/root/yizhi/qtopia-free-2.2.0/qtopia/mkspecs/qws/linux-arm-g++ -I. -I../yizhi/qtopia-free-2.2.0/qtopia/include -I../yizhi/qtopia-free-2.2.0/qt2/include -I.ui/release-shared/ -I.moc/release-shared/
LINK     = arm-linux-g++
LFLAGS   = 
LIBS     = $(SUBLIBS)  -luuid -lqtopia2 -lqtopia -lqpe -L/root/yizhi/qtopia-free-2.2.0/qtopia/lib -L/root/yizhi/qtopia-free-2.2.0/qt2/lib -lqte
AR       = ar cqs
RANLIB   = 
MOC      = /root/yizhi/qtopia-free-2.2.0/qt2/bin/moc
UIC      = /root/yizhi/qtopia-free-2.2.0/qt2/bin/uic
QMAKE    = qmake
TAR      = tar -cf
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -R
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = .obj/release-shared/

####### Files

TRANSLATABLES = 
HEADERS = ADTest.h
SOURCES = ADTest.cpp \
		main.cpp
OBJECTS = .obj/release-shared/ADTest.o \
		.obj/release-shared/main.o \
		.obj/release-shared/UI_ADTest.o
FORMS = UI_ADTest.ui
UICDECLS = .ui/release-shared/UI_ADTest.h
UICIMPLS = .ui/release-shared/UI_ADTest.cpp
SRCMOC   = .moc/release-shared/moc_ADTest.cpp \
		.moc/release-shared/moc_UI_ADTest.cpp
OBJMOC = .obj/release-shared/moc_ADTest.o \
		.obj/release-shared/moc_UI_ADTest.o
DIST	   = ../yizhi/qtopia-free-2.2.0/qtopia/src/projects.pri \
		../yizhi/qtopia-free-2.2.0/qtopia/src/ipk_groups.pri \
		ADTest.pro
QMAKE_TARGET = ADTest
DESTDIR  = 
TARGET   = ADTest

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS) $(OBJCOMP)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc ; $(MAKE) )

Makefile: ADTest.pro  /root/yizhi/qtopia-free-2.2.0/qtopia/mkspecs/qws/linux-arm-g++/qmake.conf ../yizhi/qtopia-free-2.2.0/qtopia/src/projects.pri \
		../yizhi/qtopia-free-2.2.0/qtopia/src/ipk_groups.pri
	$(QMAKE) -o Makefile ADTest.pro
qmake: 
	@$(QMAKE) -o Makefile ADTest.pro

dist: 
	@mkdir -p .obj/release-shared/ADTest && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .obj/release-shared/ADTest/ && ( cd `dirname .obj/release-shared/ADTest` && $(TAR) ADTest.tar ADTest && $(GZIP) ADTest.tar ) && $(MOVE) `dirname .obj/release-shared/ADTest`/ADTest.tar.gz . && $(DEL_FILE) -r .obj/release-shared/ADTest

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:
	-$(DEL_FILE) $(UICIMPLS) $(UICDECLS)

yaccclean:
lexclean:
clean: mocclean uiclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


unix_mkipk:
	@ if [ -e /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/data ]; then echo "ERROR: /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/data exists!"; exit 1; fi; if [ -e /root/ADTest/ipkg/qpe-ADTest__arm.ipk ]; then echo "Package qpe-ADTest__arm.ipk already exists!"; exit 0; fi; IPK_GROUP_PROJECTS="/root/ADTest"; for i in $${IPK_GROUP_PROJECTS};do make -C $$i -f Makefile unix_mkipk_deps INSTALL_ROOT=/root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/data/opt/Qtopia || exit $$?; done; make_ipk_file() { cd /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/data; if [ ! -z "$$1" ]; then lang="$$1"; suffix="_i18n_$$lang"; deps="qpe-ADTest"; if [ "`echo qpe-ADTest | cut -c -4`" = "qpe-" -a "qpe-ADTest" != "qpe-taskbar" ]; then deps="$$deps qpe-taskbar_i18n_$$lang"; fi; path="opt/Qtopia/i18n/$$lang"; if [ ! -d "/root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/data/$$path" ]; then return; fi; else suffix=; deps=`cat /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/control/DEPS`; deps=`echo $$deps | sort -u`; path="opt/Qtopia"; fi; echo "Package: qpe-ADTest$$suffix" > /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/control/control; echo "Maintainer: Unspecified" >> /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/control/control; echo "License: GPL" >> /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/control/control; echo "Version: " >> /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/control/control; echo "Arch: arm" >> /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/control/control; echo "Architecture: arm" >> /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/control/control; echo "Description: No description written for this package" >> /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/control/control; echo -n "Depends: " >> /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/control/control; echo $$deps >> /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/control/control; echo -n "Files:" >> /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/control/control; find $$path -type f -o -type l -printf "/%P " >> /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/control/control; if [ ! -x "`which mkfs.jffs2`" ]; then echo -e "\nInstalled-Size: $$(du -h -s $$path | awk '{print $$1}')" >> /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/control/control; else echo -e "\nInstalled-Size: $$(mkfs.jffs2 -r $$path | wc -c)" >> /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/control/control; fi; echo >> /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/control/control; for i in preinst prerm postinst postrm;do export FILE_LOC=/root/ADTest/qpe-ADTest.$$i; if [ -e $$FILE_LOC ]; then install -c $$FILE_LOC /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/$$i; fi; done; cd /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest; echo "2.0" > debian-binary; cd /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/control; tar --remove-files -cz --owner=0 --group=0 -f /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/control.tar.gz ./control; cd /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/data; tar --remove-files -cz --owner=0 --group=0 -f /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/data.tar.gz $$path; if [ ! -e /root/ADTest/ipkg ];then mkdir -p /root/ADTest/ipkg;fi; cd /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest; tar --remove-files -cz --owner=0 --group=0 -f /root/ADTest/ipkg/qpe-ADTest__arm$$suffix.ipk ./debian-binary ./control.tar.gz ./data.tar.gz `for i in preinst prerm postinst postrm;do if [ -e $$i ]; then echo $$i; fi; done`; }; LANGUAGES="en_US"; for lang in $${LANGUAGES}; do make_ipk_file $$lang; done; [ -d /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/data/opt/Qtopia/i18n ] && rm -r /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/data/opt/Qtopia/i18n; make_ipk_file; rm -rf /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest

unix_mkipk_deps: install
	@ mkdir -p /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/data; mkdir -p /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/control; echo "qpe-libqtopia2" | sed 's/\( [^(]\)/,\1/g' >> /root/ADTest/.packaging-working-dir/ipk/qpe-ADTest/control/DEPS

remove_target:
	-$(DEL_FILE) $(TARGET)

packages: unix_mkipk
	

sdk: install
	

devsdk:
	

relink: remove_target
	@ make

lupdate:
	@ cd /root/ADTest; TRANSFILES=; TRANSLATABLES="$(TRANSLATABLES)"; for transfile in $$TRANSLATABLES; do [ -f $$transfile ] && TRANSFILES="$$TRANSFILES $$transfile"; done; TRANSLATIONS=""; for lang in $$TRANSLATIONS; do /root/yizhi/qtopia-free-2.2.0/dqt/bin/lupdate $$TRANSFILES -ts ADTest-$$lang.ts; done

FORCE:

####### Compile

.obj/release-shared/ADTest.o: ADTest.cpp ADTest.h \
		.ui/release-shared/UI_ADTest.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/release-shared/ADTest.o ADTest.cpp

.obj/release-shared/main.o: main.cpp ADTest.h \
		../yizhi/qtopia-free-2.2.0/qtopia/include/qtopia/qpeapplication.h \
		.ui/release-shared/UI_ADTest.h \
		../yizhi/qtopia-free-2.2.0/qtopia/src/libraries/qtopia/qpeapplication.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/release-shared/main.o main.cpp

.ui/release-shared/UI_ADTest.h: UI_ADTest.ui 
	$(UIC) UI_ADTest.ui -o .ui/release-shared/UI_ADTest.h

.ui/release-shared/UI_ADTest.cpp: .ui/release-shared/UI_ADTest.h UI_ADTest.ui 
	$(UIC) UI_ADTest.ui -i UI_ADTest.h -o .ui/release-shared/UI_ADTest.cpp

.obj/release-shared/UI_ADTest.o: .ui/release-shared/UI_ADTest.cpp .ui/release-shared/UI_ADTest.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/release-shared/UI_ADTest.o .ui/release-shared/UI_ADTest.cpp

.obj/release-shared/moc_ADTest.o: .moc/release-shared/moc_ADTest.cpp ADTest.h .ui/release-shared/UI_ADTest.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/release-shared/moc_ADTest.o .moc/release-shared/moc_ADTest.cpp

.obj/release-shared/moc_UI_ADTest.o: .moc/release-shared/moc_UI_ADTest.cpp .ui/release-shared/UI_ADTest.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/release-shared/moc_UI_ADTest.o .moc/release-shared/moc_UI_ADTest.cpp

.moc/release-shared/moc_ADTest.cpp: $(MOC) ADTest.h
	$(MOC) ADTest.h -o .moc/release-shared/moc_ADTest.cpp

.moc/release-shared/moc_UI_ADTest.cpp: $(MOC) .ui/release-shared/UI_ADTest.h
	$(MOC) .ui/release-shared/UI_ADTest.h -o .moc/release-shared/moc_UI_ADTest.cpp

####### Install

install_target: all 
	@$(CHK_DIR_EXISTS) "$(INSTALL_ROOT)/bin/" || $(MKDIR) "$(INSTALL_ROOT)/bin/"
	-$(INSTALL_FILE) "$(QMAKE_TARGET)" "$(INSTALL_ROOT)/bin/$(QMAKE_TARGET)"
	-arm-linux-strip "$(INSTALL_ROOT)/bin/$(QMAKE_TARGET)"

uninstall_target: 
	-$(DEL_FILE) "$(INSTALL_ROOT)/bin/$(QMAKE_TARGET)"
	-$(DEL_DIR) "$(INSTALL_ROOT)/bin/"


install: install_target  

uninstall: uninstall_target  

